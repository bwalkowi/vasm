
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '476FF1277CA6778735AF9D4C46DFCF12'
    
_lr_action_items = {'NOP_HLT':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[14,-13,14,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),',':([11,12,34,35,36,37,40,41,42,46,47,61,66,76,84,89,90,],[28,29,49,50,51,52,53,54,55,56,58,77,80,83,91,96,97,]),')':([59,],[76,]),'LD':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[18,-13,18,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'LEA':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[16,-13,16,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),']':([81,82,92,93,94,95,],[89,90,99,100,101,102,]),':':([4,6,10,15,46,62,64,],[7,8,27,33,57,78,79,]),'LABEL':([7,8,9,13,14,19,23,25,27,28,29,31,33,39,43,44,45,49,60,62,63,64,65,67,68,69,70,71,72,74,75,83,87,88,98,99,100,101,102,103,104,105,106,],[10,15,-5,10,-13,15,43,-12,-6,-8,-9,-4,-41,-11,-15,-14,-40,60,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-7,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'REGISTER':([16,17,18,20,21,22,24,26,50,51,52,53,54,55,56,58,73,77,80,85,86,91,96,97,],[34,35,36,40,41,42,45,46,61,62,64,66,67,70,71,74,81,84,88,92,94,98,103,105,]),'PC':([18,56,58,96,97,],[37,72,75,104,106,]),'ENDCODE':([14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[-13,38,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'DUMP':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[17,-13,17,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'FREE_SPAWN':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[24,-13,24,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'DUP':([12,],[30,]),'BIN_EXPR':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[20,-13,20,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'STRING':([7,9,13,27,28,29,31,83,],[11,-5,11,-6,-8,-9,-4,-7,]),'UN_EXPR':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[22,-13,22,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'CMP':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[21,-13,21,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'NUM':([7,9,13,23,26,27,28,29,31,48,51,52,54,55,73,80,83,85,86,],[12,-5,12,44,47,-6,-8,-9,-4,59,63,65,68,69,82,87,-7,93,95,]),'ENDDATA':([9,13,27,28,29,31,83,],[-5,32,-6,-8,-9,-4,-7,]),'JXX':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[23,-13,23,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'CODE':([0,1,2,32,],[-42,6,-3,-2,]),'[':([57,78,79,],[73,85,86,]),'$end':([3,5,38,],[0,-1,-10,]),'DATA':([0,],[4,]),'ST':([8,14,19,25,33,39,43,44,45,60,62,63,64,65,67,68,69,70,71,72,74,75,87,88,98,99,100,101,102,103,104,105,106,],[26,-13,26,-12,-41,-11,-15,-14,-40,-18,-35,-36,-31,-32,-22,-21,-16,-17,-27,-23,-28,-24,-19,-20,-39,-37,-38,-33,-34,-29,-25,-30,-26,]),'(':([30,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code_segment':([1,],[5,]),'data_segment':([0,],[1,]),'empty':([0,],[2,]),'program':([0,],[3,]),'instruction':([8,19,],[25,39,]),'init':([7,13,],[9,31,]),'inits':([7,],[13,]),'instructions':([8,],[19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> data_segment code_segment','program',2,'p_program','parser.py',74),
  ('data_segment -> DATA : inits ENDDATA','data_segment',4,'p_datasegment','parser.py',79),
  ('data_segment -> empty','data_segment',1,'p_datasegment','parser.py',80),
  ('inits -> inits init','inits',2,'p_inits','parser.py',84),
  ('inits -> init','inits',1,'p_inits','parser.py',85),
  ('init -> LABEL :','init',2,'p_init_label','parser.py',89),
  ('init -> NUM DUP ( NUM ) ,','init',6,'p_init_dup','parser.py',98),
  ('init -> STRING ,','init',2,'p_init_string','parser.py',107),
  ('init -> NUM ,','init',2,'p_init_num','parser.py',112),
  ('code_segment -> CODE : instructions ENDCODE','code_segment',4,'p_codesegment','parser.py',116),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','parser.py',120),
  ('instructions -> instruction','instructions',1,'p_instructions','parser.py',121),
  ('instruction -> NOP_HLT','instruction',1,'p_nop_hlt','parser.py',125),
  ('instruction -> JXX NUM','instruction',2,'p_jxx_num','parser.py',132),
  ('instruction -> JXX LABEL','instruction',2,'p_jxx_label','parser.py',141),
  ('instruction -> UN_EXPR REGISTER , NUM','instruction',4,'p_un_expr_num','parser.py',150),
  ('instruction -> UN_EXPR REGISTER , REGISTER','instruction',4,'p_un_expr_reg','parser.py',159),
  ('instruction -> LEA REGISTER , LABEL','instruction',4,'p_lea','parser.py',169),
  ('instruction -> BIN_EXPR REGISTER , REGISTER , NUM','instruction',6,'p_bin_expr_num','parser.py',179),
  ('instruction -> BIN_EXPR REGISTER , REGISTER , REGISTER','instruction',6,'p_bin_expr_reg','parser.py',189),
  ('instruction -> CMP REGISTER , NUM','instruction',4,'p_cmp_num','parser.py',201),
  ('instruction -> CMP REGISTER , REGISTER','instruction',4,'p_cmp_reg','parser.py',210),
  ('instruction -> ST REGISTER , PC','instruction',4,'p_st_pc_reg_abs','parser.py',220),
  ('instruction -> ST NUM , PC','instruction',4,'p_st_pc_num','parser.py',229),
  ('instruction -> ST REGISTER : [ REGISTER ] , PC','instruction',8,'p_st_pc_reg_relative_reg','parser.py',236),
  ('instruction -> ST REGISTER : [ NUM ] , PC','instruction',8,'p_st_pc_reg_relative_num','parser.py',246),
  ('instruction -> ST REGISTER , REGISTER','instruction',4,'p_st_reg_reg_abs','parser.py',255),
  ('instruction -> ST NUM , REGISTER','instruction',4,'p_st_reg_num_abs','parser.py',265),
  ('instruction -> ST REGISTER : [ REGISTER ] , REGISTER','instruction',8,'p_st_reg_reg_relative_reg','parser.py',274),
  ('instruction -> ST REGISTER : [ NUM ] , REGISTER','instruction',8,'p_st_reg_reg_relative_num','parser.py',286),
  ('instruction -> LD PC , REGISTER','instruction',4,'p_ld_pc_reg_abs','parser.py',296),
  ('instruction -> LD PC , NUM','instruction',4,'p_ld_pc_num','parser.py',305),
  ('instruction -> LD PC , REGISTER : [ REGISTER ]','instruction',8,'p_ld_pc_reg_relative_reg','parser.py',312),
  ('instruction -> LD PC , REGISTER : [ NUM ]','instruction',8,'p_ld_pc_reg_relative_num','parser.py',322),
  ('instruction -> LD REGISTER , REGISTER','instruction',4,'p_ld_reg_reg_abs','parser.py',331),
  ('instruction -> LD REGISTER , NUM','instruction',4,'p_ld_reg_num_abs','parser.py',341),
  ('instruction -> LD REGISTER , REGISTER : [ REGISTER ]','instruction',8,'p_ld_reg_reg_relative_reg','parser.py',350),
  ('instruction -> LD REGISTER , REGISTER : [ NUM ]','instruction',8,'p_ld_reg_reg_relative_num','parser.py',362),
  ('instruction -> DUMP REGISTER , REGISTER , REGISTER , REGISTER','instruction',8,'p_dumps','parser.py',373),
  ('instruction -> FREE_SPAWN REGISTER','instruction',2,'p_free_spawn','parser.py',387),
  ('instruction -> LABEL :','instruction',2,'p_code_label','parser.py',395),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',404),
]
